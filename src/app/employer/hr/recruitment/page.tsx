"use client";

import Link from "next/link";
import { useState } from "react";
import GovernmentEmployeeQuestionnaire from "@/components/GovernmentEmployeeQuestionnaire";

export default function RecruitmentPage() {
  const [activeTab, setActiveTab] = useState("overview");
  const [selectedStatus, setSelectedStatus] = useState("all");
  const [showQuestionnaire, setShowQuestionnaire] = useState(false);

  const recruitmentStats = [
    { label: "–ù–∏–π—Ç –∞–Ω–∫–µ—Ç", value: "156", change: "+23", color: "text-blue-600", icon: "üìã" },
    { label: "–®–∏–Ω—ç –∞–Ω–∫–µ—Ç", value: "24", change: "+8", color: "text-green-600", icon: "üÜï" },
    { label: "–Ø—Ä–∏–ª—Ü–ª–∞–≥–∞", value: "12", change: "+3", color: "text-purple-600", icon: "üí¨" },
    { label: "–ê–º–∂–∏–ª—Ç—Ç–∞–π", value: "8", change: "+2", color: "text-orange-600", icon: "‚úÖ" }
  ];

  const recentApplications = [
    { id: 1, name: "–ë–∞—Ç–±–∞—è—Ä", position: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç", department: "IT", status: "–Ø—Ä–∏–ª—Ü–ª–∞–≥–∞", date: "2024-01-15", score: 85 },
    { id: 2, name: "–°–∞–π—Ö–∞–Ω–±–∞—è—Ä", position: "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –º—ç—Ä–≥—ç–∂–∏–ª—Ç—ç–Ω", department: "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", status: "–®–∏–Ω—ç", date: "2024-01-14", score: 92 },
    { id: 3, name: "–û—é—É–Ω—á–∏–º—ç–≥", position: "HR –º—ç—Ä–≥—ç–∂–∏–ª—Ç—ç–Ω", department: "HR", status: "–ê–º–∂–∏–ª—Ç—Ç–∞–π", date: "2024-01-12", score: 88 },
    { id: 4, name: "–≠–Ω—Ö—Ç—É—è–∞", position: "–ù—è–≥—Ç–ª–∞–Ω –±–æ–¥–æ–≥—á", department: "–°–∞–Ω—Ö“Ø“Ø", status: "–•“Ø–ª—ç—ç–≥–¥—ç–∂ –±—É–π", date: "2024-01-10", score: 76 }
  ];

  const recruitmentStages = [
    { 
      stage: "1. –ê–Ω–∫–µ—Ç —Ö“Ø–ª—ç—ç–Ω –∞–≤–∞—Ö, –∞–Ω–≥–∏–ª–∞—Ö", 
      count: 156, 
      color: "bg-blue-500", 
      description: "–ò—Ä—Å—ç–Ω –∞–Ω–∫–µ—Ç—É—É–¥—ã–≥ —Å–∏—Å—Ç–µ–º–¥ –±“Ø—Ä—Ç–≥—ç–Ω—ç",
      subSteps: [
        "–ò—Ä—Å—ç–Ω –∞–Ω–∫–µ—Ç—É—É–¥—ã–≥ —Å–∏—Å—Ç–µ–º–¥ –±“Ø—Ä—Ç–≥—ç–Ω—ç",
        "–ê–Ω–∫–µ—Ç—ã–≥ –∞–Ω–≥–∏–ª–∞—Ö:",
        "‚Ä¢ –®–∞–∞—Ä–¥–ª–∞–≥–∞ —Ö–∞–Ω–≥–∞—Å–∞–Ω",
        "‚Ä¢ –•–∞–Ω–≥–∞–∞–≥“Ø–π", 
        "‚Ä¢ –ù”©”©—Ü”©–Ω–¥ –±“Ø—Ä—Ç–≥—ç—Ö"
      ]
    },
    { 
      stage: "2. –ì–æ–ª —è—Ä–∏–ª—Ü–ª–∞–≥—ã–Ω —à–∞—Ç", 
      count: 89, 
      color: "bg-purple-500", 
      description: "–•—ç–ª—Ç—Å–∏–π–Ω –¥–∞—Ä–≥–∞, –•–ù-–∏–π–Ω –º—ç—Ä–≥—ç–∂–∏–ª—Ç—ç–Ω, —É–¥–∏—Ä–¥–ª–∞–≥—ã–Ω –±–∞–≥ –æ—Ä–æ–ª—Ü–æ–Ω–æ",
      subSteps: [
        "–•—ç–ª—Ç—Å–∏–π–Ω –¥–∞—Ä–≥–∞, –•–ù-–∏–π–Ω –º—ç—Ä–≥—ç–∂–∏–ª—Ç—ç–Ω, —É–¥–∏—Ä–¥–ª–∞–≥—ã–Ω –±–∞–≥ –æ—Ä–æ–ª—Ü–æ–Ω–æ",
        "–ê—Å—É—É–ª—Ç—É—É–¥:",
        "‚Ä¢ –£—Ä —á–∞–¥–≤–∞—Ä, —Ç—É—Ä—à–ª–∞–≥—ã–Ω —Ç–∞–ª–∞–∞—Ä",
        "‚Ä¢ –ë–∞–π–≥—É—É–ª–ª–∞–≥—ã–Ω —Å–æ—ë–ª–¥ –Ω–∏–π—Ü—ç—Ö —ç—Å—ç—Ö",
        "‚Ä¢ –°—ç—Ç–≥—ç–ª–≥—ç—ç, —Ö–∞—Ä–∏–ª—Ü–∞–∞–Ω—ã —É—Ä —á–∞–¥–≤–∞—Ä"
      ]
    },
    { 
      stage: "3. –®–∞–ª–≥–∞—Ä—Å–∞–Ω –Ω—ç—Ä –¥—ç–≤—à–∏–≥—á–¥–∏–π–Ω –±–∞—Ä–∏–º—Ç –±–∏—á–∏–≥ —à–∞–ª–≥–∞—Ö", 
      count: 45, 
      color: "bg-yellow-500", 
      description: "–î–∏–ø–ª–æ–º, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç, ”©–º–Ω”©—Ö –∞–∂–ª—ã–Ω —Ç–æ–¥–æ—Ä—Ö–æ–π–ª–æ–ª—Ç",
      subSteps: [
        "–î–∏–ø–ª–æ–º, —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç, ”©–º–Ω”©—Ö –∞–∂–ª—ã–Ω —Ç–æ–¥–æ—Ä—Ö–æ–π–ª–æ–ª—Ç",
        "–•—É–≤–∏–π–Ω “Ø–Ω—ç–º–ª—ç—Ö, –ª–∞–≤–ª–∞–≥–∞–∞ (Reference) –∑—ç—Ä–≥–∏–π–≥ —à–∞–ª–≥–∞—Ö"
      ]
    },
    { 
      stage: "5. –ì—ç—Ä—ç—ç –±–∞–π–≥—É—É–ª–∞—Ö", 
      count: 23, 
      color: "bg-green-500", 
      description: "–•”©–¥”©–ª–º”©—Ä–∏–π–Ω –≥—ç—Ä—ç—ç –±–∞–π–≥—É—É–ª–∞—Ö",
      subSteps: [
        "–•”©–¥”©–ª–º”©—Ä–∏–π–Ω –≥—ç—Ä—ç—ç –±–∞–π–≥—É—É–ª–∞—Ö",
        "–ù—É—É—Ü–ª–∞–ª—ã–Ω –≥—ç—Ä—ç—ç, –¥–æ—Ç–æ–æ–¥ –∂—É—Ä–∞–º, –∞—é—É–ª–≥“Ø–π –∞–∂–∏–ª–ª–∞–≥–∞–∞–Ω—ã –±–∏—á–∏–≥ –±–∞—Ä–∏–º—Ç –≥–∞—Ä—ã–Ω “Ø—Å—ç–≥ –∑—É—Ä—É—É–ª–∞—Ö"
      ]
    }
  ];

  const jobPositions = [
    { id: 1, title: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç", department: "IT", applicants: 45, status: "–ò–¥—ç–≤—Ö—Ç—ç–π", deadline: "2024-02-15" },
    { id: 2, title: "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –º—ç—Ä–≥—ç–∂–∏–ª—Ç—ç–Ω", department: "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", applicants: 32, status: "–ò–¥—ç–≤—Ö—Ç—ç–π", deadline: "2024-02-20" },
    { id: 3, title: "HR –º—ç—Ä–≥—ç–∂–∏–ª—Ç—ç–Ω", department: "HR", applicants: 28, status: "–î—É—É—Å—Å–∞–Ω", deadline: "2024-01-30" },
    { id: 4, title: "–ù—è–≥—Ç–ª–∞–Ω –±–æ–¥–æ–≥—á", department: "–°–∞–Ω—Ö“Ø“Ø", applicants: 38, status: "–ò–¥—ç–≤—Ö—Ç—ç–π", deadline: "2024-02-25" }
  ];

  return (
    <main className="max-w-7xl mt-10 mx-auto px-4 py-8">
      {/* Header */}
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-[#0C213A] mb-2">–ê–∂–∏–ª–¥ –∞–≤–∞—Ö –ø—Ä–æ—Ü–µ—Å—Å</h1>
        <p className="text-gray-600">–ê–∂–ª—ã–Ω –±–∞–π—Ä–Ω—ã –∑–∞—Ä–ª–∞–ª, –∞–Ω–∫–µ—Ç, —è—Ä–∏–ª—Ü–ª–∞–≥–∞, —Å–æ–Ω–≥–æ–ª—Ç—ã–Ω –ø—Ä–æ—Ü–µ—Å—Å—ã–≥ —É–¥–∏—Ä–¥–∞—Ö</p>
      </div>

      {/* Stats Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        {recruitmentStats.map((stat, index) => (
          <div key={index} className="bg-white rounded-xl shadow-sm border border-gray-200 p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600 mb-1">{stat.label}</p>
                <p className="text-2xl font-bold text-[#0C213A]">{stat.value}</p>
              </div>
              <div className="flex items-center space-x-2">
                <span className="text-2xl">{stat.icon}</span>
                <div className={`text-sm font-medium ${stat.color}`}>
                  {stat.change}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Tabs */}
      <div className="mb-6">
        <div className="border-b border-gray-200">
          <nav className="-mb-px flex space-x-8">
            {[
              { id: "overview", name: "–•—è–Ω–∞—Ö —Å–∞–º–±–∞—Ä" },
              { id: "applications", name: "–ê–Ω–∫–µ—Ç—É—É–¥" },
              { id: "questionnaire", name: "–¢”©—Ä–∏–π–Ω –∞–ª–±–∞–Ω —Ö–∞–∞–≥—á–∏–π–Ω –∞–Ω–∫–µ—Ç" },
              { id: "positions", name: "–ê–∂–ª—ã–Ω –±–∞–π—Ä" },
              { id: "process", name: "–ü—Ä–æ—Ü–µ—Å—Å" }
            ].map((tab) => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={`py-2 px-1 border-b-2 font-medium text-sm ${
                  activeTab === tab.id
                    ? "border-[#0C213A] text-[#0C213A]"
                    : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300"
                }`}
              >
                {tab.name}
              </button>
            ))}
          </nav>
        </div>
      </div>

      {/* Content based on active tab */}
      {activeTab === "overview" && (
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Recent Applications */}
          <div className="bg-white rounded-xl shadow-sm border border-gray-200">
            <div className="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
              <h3 className="text-lg font-semibold text-[#0C213A]">–°“Ø“Ø–ª–∏–π–Ω –∞–Ω–∫–µ—Ç—É—É–¥</h3>
              <Link href="#" className="text-sm text-[#0C213A] hover:text-[#0C213A]/80">–ë“Ø–≥–¥–∏–π–≥ —Ö–∞—Ä–∞—Ö</Link>
            </div>
            <div className="p-6">
              <div className="space-y-4">
                {recentApplications.map((application) => (
                  <div key={application.id} className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                    <div className="flex items-center space-x-3">
                      <div className="w-10 h-10 bg-[#0C213A] text-white rounded-full flex items-center justify-center font-bold">
                        {application.name[0]}
                      </div>
                      <div>
                        <h4 className="font-medium text-[#0C213A]">{application.name}</h4>
                        <p className="text-sm text-gray-600">{application.position} ‚Ä¢ {application.department}</p>
                        <p className="text-xs text-gray-500">{application.date}</p>
                      </div>
                    </div>
                    <div className="text-right">
                      <div className="flex items-center space-x-2">
                        <span className="text-lg font-bold text-[#0C213A]">{application.score}%</span>
                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${
                          application.status === "–ê–º–∂–∏–ª—Ç—Ç–∞–π" ? "bg-green-100 text-green-800" :
                          application.status === "–Ø—Ä–∏–ª—Ü–ª–∞–≥–∞" ? "bg-purple-100 text-purple-800" :
                          application.status === "–®–∏–Ω—ç" ? "bg-blue-100 text-blue-800" :
                          "bg-yellow-100 text-yellow-800"
                        }`}>
                          {application.status}
                        </span>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {/* Recruitment Pipeline */}
          <div className="bg-white rounded-xl shadow-sm border border-gray-200">
            <div className="px-6 py-4 border-b border-gray-200">
              <h3 className="text-lg font-semibold text-[#0C213A]">–ê–∂–∏–ª–¥ –∞–≤–∞—Ö —É—Ä—Å–≥–∞–ª</h3>
            </div>
            <div className="p-6">
              <div className="space-y-6">
                {recruitmentStages.map((stage, index) => (
                  <div key={index} className="border border-gray-200 rounded-lg p-4">
                    <div className="flex items-center justify-between mb-3">
                      <div className="flex items-center space-x-3">
                        <div className={`w-6 h-6 rounded-full ${stage.color} flex items-center justify-center text-white text-xs font-bold`}>
                          {index + 1}
                        </div>
                        <div>
                          <h4 className="font-medium text-[#0C213A]">{stage.stage}</h4>
                          <p className="text-sm text-gray-600">{stage.description}</p>
                        </div>
                      </div>
                      <span className="text-lg font-bold text-[#0C213A]">{stage.count}</span>
                    </div>
                    <div className="ml-9">
                      <div className="space-y-1">
                        {stage.subSteps.map((subStep, subIndex) => (
                          <div key={subIndex} className="text-sm text-gray-600 flex items-start">
                            <span className="w-1 h-1 bg-gray-400 rounded-full mt-2 mr-2 flex-shrink-0"></span>
                            <span>{subStep}</span>
                          </div>
                        ))}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        </div>
      )}

      {activeTab === "applications" && (
        <div className="bg-white rounded-xl shadow-sm border border-gray-200">
          <div className="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
            <h3 className="text-lg font-semibold text-[#0C213A]">–ê–Ω–∫–µ—Ç—É—É–¥—ã–Ω –∂–∞–≥—Å–∞–∞–ª—Ç</h3>
            <div className="flex space-x-3">
              <select 
                value={selectedStatus} 
                onChange={(e) => setSelectedStatus(e.target.value)}
                className="border border-gray-300 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-[#0C213A]"
              >
                <option value="all">–ë“Ø–≥–¥</option>
                <option value="new">–®–∏–Ω—ç</option>
                <option value="interview">–Ø—Ä–∏–ª—Ü–ª–∞–≥–∞</option>
                <option value="successful">–ê–º–∂–∏–ª—Ç—Ç–∞–π</option>
              </select>
              <button className="bg-[#0C213A] text-white px-4 py-2 rounded-lg hover:bg-[#0C213A]/90 transition-colors">
                –®–∏–Ω—ç –∞–Ω–∫–µ—Ç –Ω—ç–º—ç—Ö
              </button>
            </div>
          </div>
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">–ù—ç—Ä</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">–ê–ª–±–∞–Ω —Ç—É—à–∞–∞–ª</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">–•—ç–ª—Ç—ç—Å</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">–û–Ω–æ–æ</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">–¢”©–ª”©–≤</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">–û–≥–Ω–æ–æ</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">“Æ–π–ª–¥—ç–ª</th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {recentApplications.map((application) => (
                  <tr key={application.id} className="hover:bg-gray-50">
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-[#0C213A]">{application.name}</td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{application.position}</td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{application.department}</td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center">
                        <span className="text-lg font-bold text-[#0C213A] mr-2">{application.score}%</span>
                        <div className="w-16 bg-gray-200 rounded-full h-2">
                          <div 
                            className="bg-[#0C213A] h-2 rounded-full" 
                            style={{ width: `${application.score}%` }}
                          ></div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${
                        application.status === "–ê–º–∂–∏–ª—Ç—Ç–∞–π" ? "bg-green-100 text-green-800" :
                        application.status === "–Ø—Ä–∏–ª—Ü–ª–∞–≥–∞" ? "bg-purple-100 text-purple-800" :
                        application.status === "–®–∏–Ω—ç" ? "bg-blue-100 text-blue-800" :
                        "bg-yellow-100 text-yellow-800"
                      }`}>
                        {application.status}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{application.date}</td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                      <button className="text-[#0C213A] hover:text-[#0C213A]/80">“Æ–∑—ç—Ö</button>
                      <button className="text-gray-500 hover:text-gray-700">–ó–∞—Å–∞—Ö</button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}

      {activeTab === "positions" && (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {jobPositions.map((position) => (
            <div key={position.id} className="bg-white rounded-xl shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow">
              <div className="flex justify-between items-start mb-4">
                <h4 className="font-semibold text-[#0C213A]">{position.title}</h4>
                <span className={`px-2 py-1 text-xs font-medium rounded-full ${
                  position.status === "–ò–¥—ç–≤—Ö—Ç—ç–π" ? "bg-green-100 text-green-800" : "bg-gray-100 text-gray-800"
                }`}>
                  {position.status}
                </span>
              </div>
              <div className="space-y-2 text-sm text-gray-600 mb-4">
                <p><span className="font-medium">–•—ç–ª—Ç—ç—Å:</span> {position.department}</p>
                <p><span className="font-medium">–ê–Ω–∫–µ—Ç:</span> {position.applicants} —Ö“Ø–Ω</p>
                <p><span className="font-medium">–î—É—É—Å–∞—Ö —Ö—É–≥–∞—Ü–∞–∞:</span> {position.deadline}</p>
              </div>
              <div className="flex space-x-2">
                <button className="flex-1 bg-[#0C213A] text-white py-2 px-3 rounded text-sm hover:bg-[#0C213A]/90 transition-colors">
                  –ê–Ω–∫–µ—Ç “Ø–∑—ç—Ö
                </button>
                <button className="px-3 py-2 border border-gray-300 rounded text-sm hover:bg-gray-50 transition-colors">
                  –ó–∞—Å–∞—Ö
                </button>
              </div>
            </div>
          ))}
        </div>
      )}

      {activeTab === "process" && (
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          <div className="bg-white rounded-xl shadow-sm border border-gray-200">
            <div className="px-6 py-4 border-b border-gray-200">
              <h3 className="text-lg font-semibold text-[#0C213A]">–ü—Ä–æ—Ü–µ—Å—Å–∏–π–Ω –∞–ª—Ö–∞–º—É—É–¥</h3>
            </div>
            <div className="p-6">
              <div className="space-y-6">
                {[
                  { step: 1, title: "–ê–∂–ª—ã–Ω –±–∞–π—Ä –∑–∞—Ä–ª–∞—Ö", description: "–ê–∂–ª—ã–Ω –±–∞–π—Ä–Ω—ã –º—ç–¥—ç—ç–ª—ç–ª –æ—Ä—É—É–ª–∞—Ö", status: "–î—É—É—Å—Å–∞–Ω" },
                  { step: 2, title: "–ê–Ω–∫–µ—Ç —Ö“Ø–ª—ç—ç–Ω –∞–≤–∞—Ö", description: "”®—Ä–≥”©–¥”©–ª, CV —Ö“Ø–ª—ç—ç–Ω –∞–≤–∞—Ö", status: "–î—É—É—Å—Å–∞–Ω" },
                  { step: 3, title: "–ê–Ω—Ö–Ω—ã —à–∞–ª–≥–∞–ª—Ç", description: "CV, –±–∞—Ä–∏–º—Ç –±–∏—á–∏–≥ —à–∞–ª–≥–∞—Ö", status: "–î—É—É—Å—Å–∞–Ω" },
                  { step: 4, title: "–Ø—Ä–∏–ª—Ü–ª–∞–≥–∞", description: "–Ø—Ä–∏–ª—Ü–ª–∞–≥–∞ –∑–æ—Ö–∏–æ–Ω –±–∞–π–≥—É—É–ª–∞—Ö", status: "–ò–¥—ç–≤—Ö—Ç—ç–π" },
                  { step: 5, title: "–°–æ–Ω–≥–æ–ª—Ç", description: "–ê–º–∂–∏–ª—Ç—Ç–∞–π –Ω—ç—Ä –¥—ç–≤—à–∏–≥—á–¥–∏–π–≥ —Å–æ–Ω–≥–æ—Ö", status: "–•“Ø–ª—ç—ç–≥–¥—ç–∂ –±—É–π" },
                  { step: 6, title: "–ê–∂–∏–ª–¥ –æ—Ä—É—É–ª–∞—Ö", description: "–°–æ–Ω–≥–æ–≥–¥—Å–æ–Ω —Ö“Ø–º“Ø“Ø—Å–∏–π–≥ –∞–∂–∏–ª–¥ –æ—Ä—É—É–ª–∞—Ö", status: "–•“Ø–ª—ç—ç–≥–¥—ç–∂ –±—É–π" }
                ].map((process, index) => (
                  <div key={index} className="flex items-center space-x-4">
                    <div className={`w-8 h-8 rounded-full flex items-center justify-center text-white text-sm font-bold ${
                      process.status === "–î—É—É—Å—Å–∞–Ω" ? "bg-green-500" :
                      process.status === "–ò–¥—ç–≤—Ö—Ç—ç–π" ? "bg-blue-500" :
                      "bg-gray-300"
                    }`}>
                      {process.step}
                    </div>
                    <div className="flex-1">
                      <h4 className="font-medium text-[#0C213A]">{process.title}</h4>
                      <p className="text-sm text-gray-600">{process.description}</p>
                    </div>
                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${
                      process.status === "–î—É—É—Å—Å–∞–Ω" ? "bg-green-100 text-green-800" :
                      process.status === "–ò–¥—ç–≤—Ö—Ç—ç–π" ? "bg-blue-100 text-blue-800" :
                      "bg-gray-100 text-gray-800"
                    }`}>
                      {process.status}
                    </span>
                  </div>
                ))}
              </div>
            </div>
          </div>
          <div className="bg-white rounded-xl shadow-sm border border-gray-200">
            <div className="px-6 py-4 border-b border-gray-200">
              <h3 className="text-lg font-semibold text-[#0C213A]">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫</h3>
            </div>
            <div className="p-6">
              <div className="space-y-4">
                <div className="flex justify-between items-center p-4 bg-gray-50 rounded-lg">
                  <span className="font-medium">–ù–∏–π—Ç –∞–Ω–∫–µ—Ç</span>
                  <span className="text-2xl font-bold text-[#0C213A]">156</span>
                </div>
                <div className="flex justify-between items-center p-4 bg-gray-50 rounded-lg">
                  <span className="font-medium">–Ø—Ä–∏–ª—Ü–ª–∞–≥–∞ —Ö–∏–π—Å—ç–Ω</span>
                  <span className="text-2xl font-bold text-blue-600">45</span>
                </div>
                <div className="flex justify-between items-center p-4 bg-gray-50 rounded-lg">
                  <span className="font-medium">–ê–º–∂–∏–ª—Ç—Ç–∞–π</span>
                  <span className="text-2xl font-bold text-green-600">8</span>
                </div>
                <div className="flex justify-between items-center p-4 bg-gray-50 rounded-lg">
                  <span className="font-medium">–ê–º–∂–∏–ª—Ç—ã–Ω —Ö—É–≤—å</span>
                  <span className="text-2xl font-bold text-purple-600">5.1%</span>
                </div>
              </div>
            </div>
          </div>
      </div>
      )}

      {activeTab === "questionnaire" && (
        <div className="bg-white rounded-xl shadow-sm border border-gray-200">
          <div className="px-6 py-4 border-b border-gray-200">
            <h3 className="text-lg font-semibold text-[#0C213A]">–¢”©—Ä–∏–π–Ω –∞–ª–±–∞–Ω —Ö–∞–∞–≥—á–∏–π–Ω –∞–Ω–∫–µ—Ç</h3>
            <p className="text-sm text-gray-600 mt-1">–¢”©—Ä–∏–π–Ω –∞–ª–±–∞–Ω —Ö–∞–∞–≥—á–∏–π–Ω –∞–Ω–∫–µ—Ç –±”©–≥–ª”©—Ö</p>
          </div>
          <div className="p-6">
            {!showQuestionnaire ? (
              <div className="text-center py-12">
                <div className="w-16 h-16 bg-[#0C213A]/10 rounded-full flex items-center justify-center mx-auto mb-4">
                  <span className="text-2xl">üìã</span>
                </div>
                <h4 className="text-lg font-medium text-[#0C213A] mb-2">–¢”©—Ä–∏–π–Ω –∞–ª–±–∞–Ω —Ö–∞–∞–≥—á–∏–π–Ω –∞–Ω–∫–µ—Ç</h4>
                <p className="text-gray-600 mb-6">–¢”©—Ä–∏–π–Ω –∞–ª–±–∞–Ω —Ö–∞–∞–≥—á–∏–π–Ω –∞–Ω–∫–µ—Ç –±”©–≥–ª”©—Ö –±–æ–ª–æ–º–∂—Ç–æ–π</p>
                <button
                  onClick={() => setShowQuestionnaire(true)}
                  className="bg-[#0C213A] text-white px-6 py-3 rounded-lg hover:bg-[#0C213A]/90 transition-colors"
                >
                  –ê–Ω–∫–µ—Ç –±”©–≥–ª”©—Ö
                </button>
              </div>
            ) : (
              <GovernmentEmployeeQuestionnaire
                onSubmit={(data) => {
                  console.log('Questionnaire submitted:', data);
                  setShowQuestionnaire(false);
                  alert('–ê–Ω–∫–µ—Ç –∞–º–∂–∏–ª—Ç—Ç–∞–π –∏–ª–≥—ç—ç–≥–¥–ª—ç—ç!');
                }}
                onCancel={() => setShowQuestionnaire(false)}
              />
            )}
          </div>
        </div>
      )}
    </main>
  );
}